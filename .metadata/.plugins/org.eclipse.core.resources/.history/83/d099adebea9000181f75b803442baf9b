package src.ejagruti.generic;

import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Random;

public class GFL {
	//---- Generate random date between 2014 to 2017
	public static String GenerateRandomDate(){
		return "";
	}
	
	//---- Generate random number between max & min
	public static int GenerateRandomNumber(int MaxVal, int MinVal){
		int randNum;
		Random rand= new Random();
		randNum=rand.nextInt(MaxVal);
		if(randNum<MinVal){ //---- If random number is less than minimum then adjust value by adding difference randomly
			randNum=randNum+(MinVal-randNum)+rand.nextInt(MaxVal-MinVal);
		}
		return randNum;
	}

	//---- Generate random number as string with given number of digits required
	public static String GenerateRandomNumber(int numberofdigits){
		String numberString="";
		Random rand= new Random();
		while(numberofdigits!=0){//---- Generate random numbers 1 by 1 and add into string
			numberString=numberString+rand.nextInt(9);
			numberofdigits--;
		}
		return numberString;
	}
	
	/**
	 * 
	 * @param numberofcharacters e.g 5 
	 * @param Options e.g. 1 for lower case, 2 for upper case, 3 for combination of upper and lower case,
	 * 4 for special characters
	 * @return String
	 */
	public static String GenerateRandomString(int numberofcharacters,int Options){
		String randomString="";
		if(Options==1){
			while(numberofcharacters!=0){
				randomString=randomString+(char)GFL.GenerateRandomNumber(122,97);
				numberofcharacters--;
			}
		}else if(Options==2){
			while(numberofcharacters!=0){
				randomString=randomString+(char)GFL.GenerateRandomNumber(90,65);
				numberofcharacters--;
			}
		}else if(Options==3){
			while(numberofcharacters!=0){
				int uporlow=GFL.GenerateRandomNumber(20,0);
				if((uporlow%2)==1){
					randomString=randomString+(char)GFL.GenerateRandomNumber(90,65);
				}else{
					randomString=randomString+(char)GFL.GenerateRandomNumber(122,97);
				}
			numberofcharacters--;
			}
		}else if(Options==4){ // Not complete yet
			while(numberofcharacters!=0){
				randomString=randomString+(char)GFL.GenerateRandomNumber(47,33);
				numberofcharacters--;
			}
			
		}
		return randomString;
	}

	/**
	 * 
	 * @param dateformat e.g. ddMMyy, dd-yy-MM, MM-dd-yyyy
	 * @return String in format "dd/mm/yy"
	 */	
	public static String GetSystemDateTime(String dateformat){
		SimpleDateFormat sdf=new SimpleDateFormat(dateformat);
		Date dt = new Date();
		String dateExtract =sdf.format(dt);
		String dateString="";
		switch(dateformat){
		case "ddMMyy":
			dateString=dateExtract.substring(0, 2)+"/"+dateExtract.substring(2, 4)+"/"+dateExtract.substring(4,6);
			break;
		case "dd-yy-MM":
			dateString=dateExtract.substring(0, 2)+"/"+dateExtract.substring(6, 8)+"/"+dateExtract.substring(3,5);
			break;
		case "MM-dd-yyyy":
			dateString=dateExtract.substring(3, 5)+"/"+dateExtract.substring(0, 2)+"/"+dateExtract.substring(8,10);
			break;
		}

		return dateString;
	}
	/**
	 * Always return unique character value which never be repeated
	 * @return String
	 */
	public static String[] StringTillNow; //---- To store values of strings generated till program is  running
	public static String GenerateUniqueString(){
		String str1;
		SimpleDateFormat sdf=new SimpleDateFormat("ddMMMyyhhmmss");
		Date dt = new Date();
		str1 =sdf.format(dt);
		return str1;
	}
	
	/**
	 * Always return unique numeric value which never be repeated
	 * @return String
	 */
	public static String GenerateUniqueNumber(){
		String str1;
		SimpleDateFormat sdf=new SimpleDateFormat("ddMMyyhhmmss");
		Date dt = new Date();
		str1 =sdf.format(dt);
		return str1;
	}

	/**
	 * 
	 * @param lengthofpassword e.g. 7
	 * Note password should contain 1 upper case, 1 lower case, 1 special character & 1 numeric value
	 * @return
	 */
	public static String GeneratePassword(int lengthofpassword){
		String passwordString="";
		passwordString=passwordString+GFL.GenerateRandomString(1,1);
		passwordString=passwordString+GFL.GenerateRandomString(1,2);
		passwordString=passwordString+GFL.GenerateRandomString(1,4);
		passwordString=passwordString+GFL.GenerateRandomNumber(1);
		if(lengthofpassword>4){
			passwordString=passwordString+GFL.GenerateRandomString(lengthofpassword-4, GFL.GenerateRandomNumber(4, 1));
		}
		return passwordString;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println(GFL.GenerateRandomNumber(33, 6));
		System.out.println(GFL.GenerateRandomNumber(10));//----Random number with given number of digits
		System.out.println(GFL.GenerateRandomString(15,4));
		System.out.println(GFL.GetSystemDateTime("MM-dd-yyyy"));
		System.out.println(GFL.GeneratePassword(7));//---- Password
		System.out.println(GFL.GenerateUniqueNumber());//---- Unique number
		System.out.println(GFL.GenerateUniqueString());//---- unique string
	}

}
