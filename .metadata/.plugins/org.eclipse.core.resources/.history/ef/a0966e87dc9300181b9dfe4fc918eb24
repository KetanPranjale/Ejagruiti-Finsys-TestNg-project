package ej.oop.classes;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Scanner;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile;
import org.apache.pdfbox.pdmodel.encryption.PDEncryption;
import org.apache.pdfbox.text.PDFTextStripper;
import org.apache.pdfbox.text.PDFTextStripperByArea;

public class ReadPdfFileGeneric {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		PdfDocument pdfToRead = new PdfDocument();
//		try {
//			pdfToRead.load("F:\\My_Documents\\Venkat_Subramaniam-Functional_Programming_in_Java-EN.pdf");
//			
//			FileInputStream ipFile = new FileInputStream("F:\\My_Documents\\Venkat_Subramaniam-Functional_Programming_in_Java-EN.pdf");
//			ipFile.read();
//			System.out.println(pdfToRead.extractText(43));
//			//System.out.println(pdfToRead.getPageCount());
//		} catch (IOException | PdfException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		try {
//			PdfReader pdfReader = new PdfReader("F:\\Software TESTING - Ron Patton  - Copy.pdf");
//			//PdfStamper pdfStamper = new PdfStamper(pdfReader, new FileOutputStream("F:\\My_Documents\\bug-life-cycle.pdf"));
//			int pages = pdfReader.getNumberOfPages();
//			System.out.println(pages);
//			pdfReader.
//			System.out.println(pdfReader.getPageContent(2));
////			/*for(int i=0;i<=pages;i++){
////				PdfContentByte pageContentByte = pdfStamper.getOverContent(i);
////				System.out.println(pageContentByte);
////			}*/
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		
		 try{
			 File infile = new File("F:\\bug-life-cycle (2).pdf");
			 PDDocument document = PDDocument.load(infile,"AHEPD0928K");
			 	document.getClass();
			 	//document.setAllSecurityToBeRemoved(true);
			 	if(!document.isEncrypted()){
			 		
	                PDFTextStripperByArea stripper = new PDFTextStripperByArea();
	                stripper.setSortByPosition(true);

	                PDFTextStripper tStripper = new PDFTextStripper();

	                String pdfFileInText = tStripper.getText(document);
//	                System.out.println("Text:" + pdfFileInText);
	                String lines[] = pdfFileInText.split("\\r?\\n");
	                System.out.println("Total number of lines in pdf are :"+lines.length);
	                //---- printing all the lines from the pdf document
//	                for (String line : lines) {
//	                    System.out.println(line);
//	                }
	                Scanner ipscaner = new Scanner(System.in);
	                System.out.println("Enter line from where you want to read:");
	                int startLine = ipscaner.nextInt();
	                System.out.println("Enter line till which you want to read:");
	                int endLine = ipscaner.nextInt();
	                for(int i=startLine-1; i<=endLine-1;i++){
	                	System.out.println(lines[i]);
	                }
			 	}
		 }catch(IOException e){
			e.printStackTrace();
		 }
		 
		 
	}
}
